from kivy.gesture import GestureDatabase
from kivy.uix.boxlayout import BoxLayout

gesture_strings = {
    'left_to_right_line': 'eNqVmt9OHTcQxu/3RcJNke35Z78Ava2UB6hogghKCkdA2ubt6/W3ezjesLNOIplkzrfjmd947TFw9fD14Z8f1/d3L6/fn++m35evpzBdfT7F6eOHx9u/7z5Mp1T/Wb/Q9PLxw8vr89PXu5f6X56uvp1kunrXyccmm046u7L6/Onp4fF1fizPj5Wdx/6YVdMpIoI5hB/1kZimm9/CdQgxWrDAqUgdS24B/TcLqAlYhSyTRU1tnF7+uvXn4TaPTPfOFPerd0ocI1FWbSMdu2/ZR4P75l1MhTNLFDZl0gv3IcUSRTJzG4+95+a9vHmvEVKuGZSc56nKm3PSkhJLqrO28dh7aiVIccg7lfqxnf0fO0/NOQ05D9kyF5VA83jsu9U0yYjvZJKjFUpB2ziApZU02ZB3Fik5SszcxmPnraJpqKIp/uJap1ZQGipozL+61KlVlIYqGuUXVzq1ktJQSWNUNkvr3wEuraI0VNGQNYlxSRLmsT506L2VlIZKGoRSCSxFeB45HnrnVlMeqmlIl2s9lgE03IrKdLx/zZ+VXJSElNuox7sAt7KyDLnnmpSel2QpA9G3wrIdb+71I607wbra63hcWG6F5TLkvVgO62rneOxcWl0lXjinUosni/tcX+PVeQ1Z0nm92/GrKq2qQkPOVTkX05BoHumYurSiigx5L7FuY9jXAx1v7dIqKjbiux53dRdb9nW1POC9VVTKkPd6hIZ1X+d8vNa1VVSHKppKqlvuefM9jlxbRfWyoqoqqa67UruKoPnsu8Ko66VEDnkej7cYbfVUGfEtQUS0MIV5HIDS6qk24juXEC1RMq3j8SLXVkwtA645/uoat1ZMiyPOWS0sG3odj2tprZY2Usvaa10s8XxcS2u1tJFa1gMucokh5DKPZfY9d/+fnu/uHs+9vOnczJtNVzcp0nWYburBUr1e/NHp9WR5up0VvK8oUOiuIgcobF8RoSj7itQUKfQf0Z6cIN9PrPYuTcGDDgVy2Xeoq6Jc/rE9uUEOKHNesxG0U/nZx6oAbaLLxwoAk3RGMCXtjMBI3awFsCh3RvDhsBq7iHhWAAmnfQWQMP3M+F05kHDedwg+4kxZVsV7BH+S1/cDet31GANASnEkwKrBkQCyRkcC5JocCZgrOxJAV3EkAK3mSEBasyMBanOSjqBrTtIRdM1JOoKukSMBXXPKGEHXnIwi6JpT6Qi62UsadLOXEehmLyPQzU4ZE+hmJ+kEutnJKIFucWqUQLc44SbQLV64oFu8cEG3ODVKjS4FL9wMifOSpAKJEwsFSJyXhCIkDl1qdCk6i4EIEidcYki8cAUSBx0pJF64oJscugS6yVkMBLrJyYhBNzl0GXSTkxGDbnIyYtAl54Vl0CWnRgy65CTNoEte0qBLXtKgy164oMtOjQR02QlXQJedF1ZAl51wBXTFiwV0xYsFdL1DWEBXnMUgoOsdwgK66sUCut4Jq6CrTrgKut7xqaCrztpV0PVOWAVd7/hU0PWOTwVd85IGXXMWg4Kud8Iq6GZnvRjo5q7DjQagWXsrGL4db7AC29uJBitIFe6tgFOkt4JHsd4KBCX31pY1h9BbC6xx974QcS2aJRsIe/oIvTguEyTmSAiS4kgaKV7OrPclAgmNxq7Qe4EZJNmRAHVaAstAjSsRr1ezxYo7ESd9J8JVAqAUHAmALvv+2QqGyz5+tgIbh23kFxJg4407wOFNAuDBm0mAYL4j7U4CHhJ300q49bCIIwGcZcM9W8FDU28FDyXHHeAse+bZCh66mQQ8tOzmmHCD4WVnPFsBZ7lunK3gYbTvDvcUtq4CCVcTtv0llHA1YesTwG2Ec3AeBI/MjgRwcnYkIFX6hHEB4bLJBnCW9ru9ibMVcErprLhZyLrVrNYIq/XWBGt5J8xV0njIuqGsVoZ1M4nA2oeJi4HEzdQG6yb4lqik0FsLrNxZ0eTL0mOerUiUeg9o5YU2HpAb9fGiYRfqI0OPLkvndrYiN+45oBMX7jNG8y28iRe5SR8vWmyRfjZ01SJ9FmikRfoY0DuL9DGgXRbpc0OHLLqJAbnpJgbkppsYkJtuZkNum3caDa7Y/vf3EhpcMXUkyNrMkVQE+P7pl7uH+y+v869UyLy2N6u9/T7Dvw+fX780hUxLC1mtr0/f7p5vHz+1X8eofez805PZvnyj98/T89Pn75/g2aabdG1Bc5Zcj+q6XG3+kdP1/wr85YQ=',
    'right_to_left_line': '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',
    'bottom_to_top_line': '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'
}

gestures = GestureDatabase()
for name, gesture_string in gesture_strings.items():
    gesture = gestures.str_to_gesture(gesture_string)
    gesture.name = name
    gestures.add_gesture(gesture)


class GestureBox(BoxLayout):
    def on_touch_down(self, touch):
        touch.ud['gesture_path'] = [(touch.x, touch.y)]
        super(GestureBox, self).on_touch_down(touch)

    def on_touch_move(self, touch):
        touch.ud['gesture_path'].append((touch.x, touch.y))
        super(GestureBox, self).on_touch_move(touch)

    def on_touch_up(self, touch):
        print touch.ud['gesture_path']
        super(GestureBox, self).on_touch_up(touch)
